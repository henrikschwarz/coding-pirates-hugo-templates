<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Coding pirates Odense Elektronik</title><link>/</link><description>Recent content in Introduction on Coding pirates Odense Elektronik</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Intaller Arduino</title><link>/docs/uger/uge1/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/uge1/install/</guid><description>Installer Arduino IDE. # For at programmere arduino skal vi bruge Arduino IDE. Du kan hente Arduino IDE på det på det her link. Du skal ikke hente Windows Store versionen, fordi den laver segmentationsfejl når man skal upload på nogen boards.
CH340 Driver</description></item><item><title>Adressable RGB kæde</title><link>/docs/uger/komponenter/leda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/komponenter/leda/</guid><description>Library # Setup kode # #include &amp;lt;Adafruit_NeoPixel.h&amp;gt;#ifdef __AVR__ #include &amp;lt;avr/power.h&amp;gt;#endif #define PIN 6 #define NUMPIXELS 16 Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800); #define DELAYVAL 500 void setup() { #if defined(__AVR_ATtiny85__) &amp;amp;&amp;amp; (F_CPU == 16000000) clock_prescale_set(clock_div_1); #endif pixels.begin(); } void loop() { pixels.clear(); for(int i=0; i&amp;lt;NUMPIXELS; i++) { pixels.setPixelColor(i, pixels.Color(0, 150, 0)); pixels.show(); delay(DELAYVAL); } }</description></item><item><title>Eksempel 1 - LED</title><link>/docs/uger/uge1/eksempel-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/uge1/eksempel-1/</guid><description>Eksempel 1 - LED control # Første Eksempel er for at få en led til at blinke. Det er en af de mest klassiske programmer på Arduinoen.
Følgende billede viser hvordan de elektroniske komponenter skal kobles sammen: De følgende 4 eksempler, viser hvordan, det samme resultat, kan skrives på forskellige måder.
Kodeeksempel 1 - Få en LED til at blinke # const int ledPin = 7; void setup() { // Opsæt kommunikationshastighed med PC Serial.</description></item><item><title>Eksempel 2 - LED &amp; Tactile button</title><link>/docs/uger/uge1/eksempel-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/uge1/eksempel-2/</guid><description>Eksempel 2 - LED control vha. input og knap # I andet eksempel skal du arbejde med input pins på Arduinoen. I denne øvelse skal du få en knap til at lyse, når der trykkes på en knap.
Følgende billede viser hvordan de elektroniske komponenter skal kobles sammen: const int ledPin = 8; const int inputPin = 7; void setup() { // Opsæt kommunikationshastighed med PC Serial.</description></item><item><title>Eksempel 3 - LED &amp; Potentiometer</title><link>/docs/uger/uge1/eksempel-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/uge1/eksempel-3/</guid><description>Eksempel 3 - LED PWM control vha. analogt input og potentiometer # I tredje eksempel skal du arbejde med analoge input pins på Arduinoen. I denne øvelse skal du få en LED til at lyse proportionelt med et potentiometers position.
Følgende billede viser hvordan de elektroniske komponenter skal kobles sammen: Kodeeksempel 1 - Få en LED til at lyse proportionelt med potentiometer #</description></item><item><title>Inbyggede kommandoer</title><link>/docs/uger/cheatheets/control-statement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/cheatheets/control-statement/</guid><description>Datatyper i Arduino(C++) # Arduino har de har datatyper:
Datatype Beskrivelse int Det er en integer (hel tal) float Det er et floating point tal (decimal tal) double Mere præcis decimal. long Længere hel tal (kan holde længere værdier) bool En boolean kan kun være sand (true/1) eller falsk (false/0) Char Et enkel bogstav String En liste af char&amp;rsquo;s Definer en variable # Du definer en variable sådan her datatype navn = værdi;.</description></item><item><title>Keypad eksemepel kode og setup</title><link>/docs/uger/komponenter/keypad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/komponenter/keypad/</guid><description>Setup # Bibloteket # Installer biblioteket fra Arduino IDE: Kode eksempler: # #include &amp;lt;Keypad.h&amp;gt; const int ROW_NUM = 4; //four rows const int COLUMN_NUM = 4; //four columns char keys[ROW_NUM][COLUMN_NUM] = { {&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;,&amp;#39;3&amp;#39;, &amp;#39;A&amp;#39;}, {&amp;#39;4&amp;#39;,&amp;#39;5&amp;#39;,&amp;#39;6&amp;#39;, &amp;#39;B&amp;#39;}, {&amp;#39;7&amp;#39;,&amp;#39;8&amp;#39;,&amp;#39;9&amp;#39;, &amp;#39;C&amp;#39;}, {&amp;#39;*&amp;#39;,&amp;#39;0&amp;#39;,&amp;#39;#&amp;#39;, &amp;#39;D&amp;#39;} }; byte pin_rows[ROW_NUM] = {9, 8, 7, 6}; //connect to the row pinouts of the keypad byte pin_column[COLUMN_NUM] = {5, 4, 3, 2}; //connect to the column pinouts of the keypad Keypad keypad = Keypad( makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM ); void setup(){ Serial.</description></item><item><title>LCD eksemepel kode og setup</title><link>/docs/uger/komponenter/lcd_i2c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/komponenter/lcd_i2c/</guid><description>Setup # Bibloteket # Installer biblioteket fra Arduino IDE: Kode eksempler: # #include &amp;lt;Wire.h&amp;gt; // Library for I2C communication#include &amp;lt;LiquidCrystal_I2C.h&amp;gt; // Library for LCD // Wiring: SDA pin is connected to A4 and SCL pin to A5. // Connect to LCD via I2C, default address 0x27 (A0-A2 not jumpered) LiquidCrystal_I2C lcd = LiquidCrystal_I2C(0x27, 16, 2); // Change to (0x27,20,4) for 20x4 LCD. void setup() { // Initiate the LCD: lcd.</description></item><item><title>RFID eksemepel kode og setup</title><link>/docs/uger/komponenter/rfid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/komponenter/rfid/</guid><description>Setup # Ledningerne for RFID modulet: Og en tabel over forbindelserne: Bibloteket # Installer biblioteket fra Arduino IDE: Kode eksempler: # #include &amp;lt;SPI.h&amp;gt;#include &amp;lt;MFRC522.h&amp;gt; #define SS_PIN 10 #define RST_PIN 5 MFRC522 rfid(SS_PIN, RST_PIN); void setup() { Serial.begin(9600); SPI.begin(); // init SPI bus rfid.PCD_Init(); // init MFRC522 Serial.println(&amp;#34;Tap RFID/NFC Tag on reader&amp;#34;); } void loop() { if (rfid.PICC_IsNewCardPresent()) { // new tag is available if (rfid.</description></item><item><title>RTC eksemepel kode og setup</title><link>/docs/uger/komponenter/rtc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/komponenter/rtc/</guid><description>RTC Ledninger # RTC Biblotek # Først gå ind i Manage Libraries i Arduino IDE. Så Skriv RTClib i søgefeltet og klik på Install Library RTC kode # Setup code for vores RTC:
#include &amp;lt;RTClib.h&amp;gt; RTC_DS3231 rtc; // Definerer en RTC klasse void setup () { Serial.begin(9600); // SETUP RTC MODULE if (! rtc.begin()) { Serial.println(&amp;#34;Couldn&amp;#39;t find RTC&amp;#34;); while (1); } // Sæt RTC tid og data til computerens tid og dato rtc.</description></item><item><title>Servo eksemepel kode og setup</title><link>/docs/uger/komponenter/servo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/komponenter/servo/</guid><description>Servo ledninger # Servo eksempel kode # #include &amp;lt;Servo.h&amp;gt; Servo myservo; // create servo object to control a servo int pos = 0; // variable to store the servo position void setup() { myservo.attach(9); // attaches the servo on pin 9 to the servo object } void loop() { for (pos = 0; pos &amp;lt;= 180; pos += 1) { // goes from 0 degrees to 180 degrees // in steps of 1 degree myservo.</description></item><item><title>Eksempel 4 - Buzzer</title><link>/docs/uger/uge1/eksempel-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/uge1/eksempel-4/</guid><description>Eksempel 1 - Buzzer # I det her eksempel skal vi sætte en buzzer op. For at gøre det skal vi bruge det her el-diagram:
Eksempel 1 - Buzzer kode # For at få buzzeren til at virke skal vi bruge tone og noTone som laver bølger med forskellige frekvenser og sender det til buzzeren.
#define BUZZER_PIN 8 // Sæt buzzer pin int frekvens = 330; void setup() { pinMode(8, OUTPUT); } void loop() { tone(BUZZER_PIN, frekvens); }</description></item><item><title>Eksempel 5 - LCD</title><link>/docs/uger/uge1/eksempel-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/uger/uge1/eksempel-5/</guid><description>Eksempel 1 - Sæt LCD op diagram op # Her skal der bruges 1 LCD I2C display og 4 han til hun ledninger. Så skal de forbindes som der vises nedenunder.
Eksempel 1 - Hente biblotek til LCD # For at kunne bruge vores LCD skal vi bruge et biblotek. Det biblotek kan findes igennem jeres Arduino program ved at gå op i Sketch -&amp;gt; Include Library -&amp;gt; Manage Libraries:</description></item></channel></rss>